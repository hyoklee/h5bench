name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openmpi-bin openmpi-common libopenmpi-dev python3-pip build-essential cmake zlib1g-dev
        pip3 install pytest

    - name: Checkout HDF5
      uses: actions/checkout@v4
      with:
        repository: HDFGroup/hdf5
        ref: develop
        path: hdf5

    - name: Get HDF5 commit hash
      id: hdf5-hash
      run: |
        cd hdf5
        HDF5_HASH=$(git rev-parse HEAD)
        echo "hash=$HDF5_HASH" >> $GITHUB_OUTPUT
        echo "HDF5 commit hash: $HDF5_HASH"

    - name: Check previous HDF5 hash
      id: check-hash
      run: |
        # Try to get the previous hash from gh-pages branch
        PREV_HASH=""
        if git ls-remote --heads origin gh-pages >/dev/null 2>&1; then
          # Clone gh-pages branch to get previous hash
          git clone --single-branch --branch gh-pages https://github.com/${{ github.repository }} gh-pages-temp || true
          if [ -f gh-pages-temp/hdf5-hash.txt ]; then
            PREV_HASH=$(cat gh-pages-temp/hdf5-hash.txt)
          fi
          rm -rf gh-pages-temp
        fi

        echo "Previous HDF5 hash: ${PREV_HASH:-none}"
        echo "Current HDF5 hash: ${{ steps.hdf5-hash.outputs.hash }}"

        if [ "$PREV_HASH" = "${{ steps.hdf5-hash.outputs.hash }}" ] && [ "${{ github.event_name }}" = "schedule" ]; then
          echo "skip_tests=true" >> $GITHUB_OUTPUT
          echo "No HDF5 changes detected, skipping tests for scheduled run"
        else
          echo "skip_tests=false" >> $GITHUB_OUTPUT
          echo "HDF5 changed or manual trigger, running tests"
        fi

    - name: Cache HDF5 build
      id: cache-hdf5
      uses: actions/cache@v4
      with:
        path: ~/hdf5-install
        key: hdf5-${{ steps.hdf5-hash.outputs.hash }}-${{ runner.os }}

    - name: Build HDF5
      if: steps.cache-hdf5.outputs.cache-hit != 'true' && steps.check-hash.outputs.skip_tests != 'true'
      run: |
        cd hdf5
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/hdf5-install \
          -DCMAKE_BUILD_TYPE=Release \
          -DHDF5_ENABLE_PARALLEL=ON \
          -DHDF5_ENABLE_SUBFILING_VFD=ON \
          -DHDF5_BUILD_TOOLS=OFF \
          -DHDF5_BUILD_EXAMPLES=OFF \
          -DHDF5_BUILD_TESTS=OFF
        make -j$(nproc)
        make install

    - name: Configure CMake
      if: steps.check-hash.outputs.skip_tests != 'true'
      run: |
        export HDF5_DIR=$HOME/hdf5-install
        cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      if: steps.check-hash.outputs.skip_tests != 'true'
      run: cmake --build build --parallel

    - name: Run tests
      if: steps.check-hash.outputs.skip_tests != 'true'
      run: |
        cd build
        ctest --output-on-failure --verbose | tee ../test-results.txt

    - name: Parse test results for benchmarking
      if: steps.check-hash.outputs.skip_tests != 'true'
      run: |
        python3 scripts/parse_test_results.py test-results.txt benchmark-results.json

    - name: Store benchmark result
      if: steps.check-hash.outputs.skip_tests != 'true'
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: H5Bench Performance
        tool: 'customSmallerIsBetter'
        output-file-path: benchmark-results.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        gh-pages-branch: gh-pages
        benchmark-data-dir-path: dev/bench

    - name: Update HDF5 hash file
      if: steps.check-hash.outputs.skip_tests != 'true'
      run: |
        # Clone gh-pages to update hash file
        git clone --single-branch --branch gh-pages https://github.com/${{ github.repository }} gh-pages-update
        cd gh-pages-update
        echo "${{ steps.hdf5-hash.outputs.hash }}" > hdf5-hash.txt
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add hdf5-hash.txt
        git commit -m "update: HDF5 commit hash to ${{ steps.hdf5-hash.outputs.hash }}"
        git push

    - name: Skip message
      if: steps.check-hash.outputs.skip_tests == 'true'
      run: |
        echo "⏭️ Skipping tests - no HDF5 changes detected since last run"
        echo "Previous HDF5 hash matches current hash: ${{ steps.hdf5-hash.outputs.hash }}"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: steps.check-hash.outputs.skip_tests != 'true'
      with:
        name: test-results
        path: |
          test-results.txt
          benchmark-results.json
